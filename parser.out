Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    CASE
    CONST
    DOTDOT
    DOWNTO
    FILE
    GOTO
    IN
    LABEL
    LBRACKET
    NIL
    NOT
    OF
    PACKED
    PROCEDURE
    RBRACKET
    READ
    RECORD
    REPEAT
    SET
    TYPE
    UNTIL
    WITH

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMI declarations functions BEGIN statements END DOT
Rule 2     program -> PROGRAM ID SEMI declarations BEGIN statements END DOT
Rule 3     declarations -> VAR var_declaration_list
Rule 4     declarations -> empty
Rule 5     var_declaration_list -> var_declaration_list var_declaration
Rule 6     var_declaration_list -> var_declaration
Rule 7     var_declaration -> id_list COLON type SEMI
Rule 8     id_list -> ID
Rule 9     id_list -> ID COMMA id_list
Rule 10    type -> INTEGER
Rule 11    type -> BOOLEAN
Rule 12    type -> STRING
Rule 13    type -> REAL
Rule 14    functions -> function functions
Rule 15    functions -> empty
Rule 16    function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI
Rule 17    param_list -> ID COLON type
Rule 18    param_list -> param_list SEMI ID COLON type
Rule 19    argument_list -> expression
Rule 20    argument_list -> argument_list COMMA expression
Rule 21    expression -> ID LPAREN argument_list RPAREN
Rule 22    statements -> statements statement
Rule 23    statements -> statement
Rule 24    write_statement -> WRITE LPAREN writelist RPAREN SEMI
Rule 25    statement -> assignment_statement
Rule 26    statement -> writeln_statement
Rule 27    statement -> write_statement
Rule 28    statement -> readln_statement
Rule 29    statement -> for_statement
Rule 30    statement -> if_statement
Rule 31    statement -> while_statement
Rule 32    statement -> statement_compound
Rule 33    statement -> SEMI
Rule 34    assignment_statement -> ID ASSIGN expression SEMI
Rule 35    writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI
Rule 36    writelist -> writelist COMMA writeitem
Rule 37    writelist -> writeitem
Rule 38    writeitem -> STRING_LITERAL
Rule 39    writeitem -> expression
Rule 40    readln_statement -> READLN LPAREN ID RPAREN SEMI
Rule 41    for_statement -> FOR ID ASSIGN expression TO expression DO statement
Rule 42    expression -> TRUE
Rule 43    expression -> FALSE
Rule 44    expression -> expression AND expression
Rule 45    expression -> expression OR expression
Rule 46    expression -> expression LT expression
Rule 47    expression -> expression LE expression
Rule 48    expression -> expression GT expression
Rule 49    expression -> expression GE expression
Rule 50    expression -> expression EQ expression
Rule 51    expression -> expression NEQ expression
Rule 52    expression -> LPAREN expression RPAREN
Rule 53    expression -> expression DIV expression
Rule 54    expression -> expression MOD expression
Rule 55    statement_compound -> BEGIN statements END
Rule 56    if_statement -> IF expression THEN statement
Rule 57    if_statement -> IF expression THEN statement ELSE statement
Rule 58    while_statement -> WHILE expression DO statement
Rule 59    expression -> expression PLUS expression
Rule 60    expression -> expression MINUS expression
Rule 61    expression -> expression TIMES expression
Rule 62    expression -> expression DIVIDE expression
Rule 63    expression -> ID
Rule 64    expression -> NUMBER
Rule 65    expression -> REAL
Rule 66    empty -> <empty>

Terminals, with rules where they appear

AND                  : 44
ARRAY                : 
ASSIGN               : 34 41
BEGIN                : 1 2 16 55
BOOLEAN              : 11
CASE                 : 
COLON                : 7 16 17 18
COMMA                : 9 20 36
CONST                : 
DIV                  : 53
DIVIDE               : 62
DO                   : 41 58
DOT                  : 1 2
DOTDOT               : 
DOWNTO               : 
ELSE                 : 57
END                  : 1 2 16 55
EQ                   : 50
FALSE                : 43
FILE                 : 
FOR                  : 41
FUNCTION             : 16
GE                   : 49
GOTO                 : 
GT                   : 48
ID                   : 1 2 8 9 16 17 18 21 34 40 41 63
IF                   : 56 57
IN                   : 
INTEGER              : 10
LABEL                : 
LBRACKET             : 
LE                   : 47
LPAREN               : 16 21 24 35 40 52
LT                   : 46
MINUS                : 60
MOD                  : 54
NEQ                  : 51
NIL                  : 
NOT                  : 
NUMBER               : 64
OF                   : 
OR                   : 45
PACKED               : 
PLUS                 : 59
PROCEDURE            : 
PROGRAM              : 1 2
RBRACKET             : 
READ                 : 
READLN               : 40
REAL                 : 13 65
RECORD               : 
REPEAT               : 
RPAREN               : 16 21 24 35 40 52
SEMI                 : 1 2 7 16 16 18 24 33 34 35 40
SET                  : 
STRING               : 12
STRING_LITERAL       : 38
THEN                 : 56 57
TIMES                : 61
TO                   : 41
TRUE                 : 42
TYPE                 : 
UNTIL                : 
VAR                  : 3
WHILE                : 58
WITH                 : 
WRITE                : 24
WRITELN              : 35
error                : 

Nonterminals, with rules where they appear

argument_list        : 20 21
assignment_statement : 25
declarations         : 1 2 16
empty                : 4 15
expression           : 19 20 34 39 41 41 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 53 53 54 54 56 57 58 59 59 60 60 61 61 62 62
for_statement        : 29
function             : 14
functions            : 1 14
id_list              : 7 9
if_statement         : 30
param_list           : 16 18
program              : 0
readln_statement     : 28
statement            : 22 23 41 56 57 57 58
statement_compound   : 32
statements           : 1 2 16 22 55
type                 : 7 16 17 18
var_declaration      : 5 6
var_declaration_list : 3 5
while_statement      : 31
write_statement      : 27
writeitem            : 36 37
writelist            : 24 35 36
writeln_statement    : 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMI declarations functions BEGIN statements END DOT
    (2) program -> . PROGRAM ID SEMI declarations BEGIN statements END DOT

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMI declarations functions BEGIN statements END DOT
    (2) program -> PROGRAM . ID SEMI declarations BEGIN statements END DOT

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMI declarations functions BEGIN statements END DOT
    (2) program -> PROGRAM ID . SEMI declarations BEGIN statements END DOT

    SEMI            shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMI . declarations functions BEGIN statements END DOT
    (2) program -> PROGRAM ID SEMI . declarations BEGIN statements END DOT
    (3) declarations -> . VAR var_declaration_list
    (4) declarations -> . empty
    (66) empty -> .

    VAR             shift and go to state 6
    BEGIN           reduce using rule 66 (empty -> .)
    FUNCTION        reduce using rule 66 (empty -> .)

    declarations                   shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMI declarations . functions BEGIN statements END DOT
    (2) program -> PROGRAM ID SEMI declarations . BEGIN statements END DOT
    (14) functions -> . function functions
    (15) functions -> . empty
    (16) function -> . FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI
    (66) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 9
    FUNCTION        shift and go to state 12

  ! BEGIN           [ reduce using rule 66 (empty -> .) ]

    functions                      shift and go to state 8
    function                       shift and go to state 10
    empty                          shift and go to state 11

state 6

    (3) declarations -> VAR . var_declaration_list
    (5) var_declaration_list -> . var_declaration_list var_declaration
    (6) var_declaration_list -> . var_declaration
    (7) var_declaration -> . id_list COLON type SEMI
    (8) id_list -> . ID
    (9) id_list -> . ID COMMA id_list

    ID              shift and go to state 16

    var_declaration_list           shift and go to state 13
    var_declaration                shift and go to state 14
    id_list                        shift and go to state 15

state 7

    (4) declarations -> empty .

    BEGIN           reduce using rule 4 (declarations -> empty .)
    FUNCTION        reduce using rule 4 (declarations -> empty .)


state 8

    (1) program -> PROGRAM ID SEMI declarations functions . BEGIN statements END DOT

    BEGIN           shift and go to state 17


state 9

    (2) program -> PROGRAM ID SEMI declarations BEGIN . statements END DOT
    (22) statements -> . statements statement
    (23) statements -> . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statements                     shift and go to state 21
    statement                      shift and go to state 22
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 10

    (14) functions -> function . functions
    (14) functions -> . function functions
    (15) functions -> . empty
    (16) function -> . FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI
    (66) empty -> .

    FUNCTION        shift and go to state 12
    BEGIN           reduce using rule 66 (empty -> .)

    function                       shift and go to state 10
    functions                      shift and go to state 37
    empty                          shift and go to state 11

state 11

    (15) functions -> empty .

    BEGIN           reduce using rule 15 (functions -> empty .)


state 12

    (16) function -> FUNCTION . ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI

    ID              shift and go to state 38


state 13

    (3) declarations -> VAR var_declaration_list .
    (5) var_declaration_list -> var_declaration_list . var_declaration
    (7) var_declaration -> . id_list COLON type SEMI
    (8) id_list -> . ID
    (9) id_list -> . ID COMMA id_list

    BEGIN           reduce using rule 3 (declarations -> VAR var_declaration_list .)
    FUNCTION        reduce using rule 3 (declarations -> VAR var_declaration_list .)
    ID              shift and go to state 16

    var_declaration                shift and go to state 39
    id_list                        shift and go to state 15

state 14

    (6) var_declaration_list -> var_declaration .

    ID              reduce using rule 6 (var_declaration_list -> var_declaration .)
    BEGIN           reduce using rule 6 (var_declaration_list -> var_declaration .)
    FUNCTION        reduce using rule 6 (var_declaration_list -> var_declaration .)


state 15

    (7) var_declaration -> id_list . COLON type SEMI

    COLON           shift and go to state 40


state 16

    (8) id_list -> ID .
    (9) id_list -> ID . COMMA id_list

    COLON           reduce using rule 8 (id_list -> ID .)
    COMMA           shift and go to state 41


state 17

    (1) program -> PROGRAM ID SEMI declarations functions BEGIN . statements END DOT
    (22) statements -> . statements statement
    (23) statements -> . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statements                     shift and go to state 42
    statement                      shift and go to state 22
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 18

    (34) assignment_statement -> ID . ASSIGN expression SEMI

    ASSIGN          shift and go to state 43


state 19

    (33) statement -> SEMI .

    END             reduce using rule 33 (statement -> SEMI .)
    SEMI            reduce using rule 33 (statement -> SEMI .)
    ID              reduce using rule 33 (statement -> SEMI .)
    WRITELN         reduce using rule 33 (statement -> SEMI .)
    WRITE           reduce using rule 33 (statement -> SEMI .)
    READLN          reduce using rule 33 (statement -> SEMI .)
    FOR             reduce using rule 33 (statement -> SEMI .)
    IF              reduce using rule 33 (statement -> SEMI .)
    WHILE           reduce using rule 33 (statement -> SEMI .)
    BEGIN           reduce using rule 33 (statement -> SEMI .)
    ELSE            reduce using rule 33 (statement -> SEMI .)


state 20

    (55) statement_compound -> BEGIN . statements END
    (22) statements -> . statements statement
    (23) statements -> . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statements                     shift and go to state 44
    statement                      shift and go to state 22
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 21

    (2) program -> PROGRAM ID SEMI declarations BEGIN statements . END DOT
    (22) statements -> statements . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    END             shift and go to state 45
    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 46
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 22

    (23) statements -> statement .

    END             reduce using rule 23 (statements -> statement .)
    SEMI            reduce using rule 23 (statements -> statement .)
    ID              reduce using rule 23 (statements -> statement .)
    WRITELN         reduce using rule 23 (statements -> statement .)
    WRITE           reduce using rule 23 (statements -> statement .)
    READLN          reduce using rule 23 (statements -> statement .)
    FOR             reduce using rule 23 (statements -> statement .)
    IF              reduce using rule 23 (statements -> statement .)
    WHILE           reduce using rule 23 (statements -> statement .)
    BEGIN           reduce using rule 23 (statements -> statement .)


state 23

    (25) statement -> assignment_statement .

    END             reduce using rule 25 (statement -> assignment_statement .)
    SEMI            reduce using rule 25 (statement -> assignment_statement .)
    ID              reduce using rule 25 (statement -> assignment_statement .)
    WRITELN         reduce using rule 25 (statement -> assignment_statement .)
    WRITE           reduce using rule 25 (statement -> assignment_statement .)
    READLN          reduce using rule 25 (statement -> assignment_statement .)
    FOR             reduce using rule 25 (statement -> assignment_statement .)
    IF              reduce using rule 25 (statement -> assignment_statement .)
    WHILE           reduce using rule 25 (statement -> assignment_statement .)
    BEGIN           reduce using rule 25 (statement -> assignment_statement .)
    ELSE            reduce using rule 25 (statement -> assignment_statement .)


state 24

    (26) statement -> writeln_statement .

    END             reduce using rule 26 (statement -> writeln_statement .)
    SEMI            reduce using rule 26 (statement -> writeln_statement .)
    ID              reduce using rule 26 (statement -> writeln_statement .)
    WRITELN         reduce using rule 26 (statement -> writeln_statement .)
    WRITE           reduce using rule 26 (statement -> writeln_statement .)
    READLN          reduce using rule 26 (statement -> writeln_statement .)
    FOR             reduce using rule 26 (statement -> writeln_statement .)
    IF              reduce using rule 26 (statement -> writeln_statement .)
    WHILE           reduce using rule 26 (statement -> writeln_statement .)
    BEGIN           reduce using rule 26 (statement -> writeln_statement .)
    ELSE            reduce using rule 26 (statement -> writeln_statement .)


state 25

    (27) statement -> write_statement .

    END             reduce using rule 27 (statement -> write_statement .)
    SEMI            reduce using rule 27 (statement -> write_statement .)
    ID              reduce using rule 27 (statement -> write_statement .)
    WRITELN         reduce using rule 27 (statement -> write_statement .)
    WRITE           reduce using rule 27 (statement -> write_statement .)
    READLN          reduce using rule 27 (statement -> write_statement .)
    FOR             reduce using rule 27 (statement -> write_statement .)
    IF              reduce using rule 27 (statement -> write_statement .)
    WHILE           reduce using rule 27 (statement -> write_statement .)
    BEGIN           reduce using rule 27 (statement -> write_statement .)
    ELSE            reduce using rule 27 (statement -> write_statement .)


state 26

    (28) statement -> readln_statement .

    END             reduce using rule 28 (statement -> readln_statement .)
    SEMI            reduce using rule 28 (statement -> readln_statement .)
    ID              reduce using rule 28 (statement -> readln_statement .)
    WRITELN         reduce using rule 28 (statement -> readln_statement .)
    WRITE           reduce using rule 28 (statement -> readln_statement .)
    READLN          reduce using rule 28 (statement -> readln_statement .)
    FOR             reduce using rule 28 (statement -> readln_statement .)
    IF              reduce using rule 28 (statement -> readln_statement .)
    WHILE           reduce using rule 28 (statement -> readln_statement .)
    BEGIN           reduce using rule 28 (statement -> readln_statement .)
    ELSE            reduce using rule 28 (statement -> readln_statement .)


state 27

    (29) statement -> for_statement .

    END             reduce using rule 29 (statement -> for_statement .)
    SEMI            reduce using rule 29 (statement -> for_statement .)
    ID              reduce using rule 29 (statement -> for_statement .)
    WRITELN         reduce using rule 29 (statement -> for_statement .)
    WRITE           reduce using rule 29 (statement -> for_statement .)
    READLN          reduce using rule 29 (statement -> for_statement .)
    FOR             reduce using rule 29 (statement -> for_statement .)
    IF              reduce using rule 29 (statement -> for_statement .)
    WHILE           reduce using rule 29 (statement -> for_statement .)
    BEGIN           reduce using rule 29 (statement -> for_statement .)
    ELSE            reduce using rule 29 (statement -> for_statement .)


state 28

    (30) statement -> if_statement .

    END             reduce using rule 30 (statement -> if_statement .)
    SEMI            reduce using rule 30 (statement -> if_statement .)
    ID              reduce using rule 30 (statement -> if_statement .)
    WRITELN         reduce using rule 30 (statement -> if_statement .)
    WRITE           reduce using rule 30 (statement -> if_statement .)
    READLN          reduce using rule 30 (statement -> if_statement .)
    FOR             reduce using rule 30 (statement -> if_statement .)
    IF              reduce using rule 30 (statement -> if_statement .)
    WHILE           reduce using rule 30 (statement -> if_statement .)
    BEGIN           reduce using rule 30 (statement -> if_statement .)
    ELSE            reduce using rule 30 (statement -> if_statement .)


state 29

    (31) statement -> while_statement .

    END             reduce using rule 31 (statement -> while_statement .)
    SEMI            reduce using rule 31 (statement -> while_statement .)
    ID              reduce using rule 31 (statement -> while_statement .)
    WRITELN         reduce using rule 31 (statement -> while_statement .)
    WRITE           reduce using rule 31 (statement -> while_statement .)
    READLN          reduce using rule 31 (statement -> while_statement .)
    FOR             reduce using rule 31 (statement -> while_statement .)
    IF              reduce using rule 31 (statement -> while_statement .)
    WHILE           reduce using rule 31 (statement -> while_statement .)
    BEGIN           reduce using rule 31 (statement -> while_statement .)
    ELSE            reduce using rule 31 (statement -> while_statement .)


state 30

    (32) statement -> statement_compound .

    END             reduce using rule 32 (statement -> statement_compound .)
    SEMI            reduce using rule 32 (statement -> statement_compound .)
    ID              reduce using rule 32 (statement -> statement_compound .)
    WRITELN         reduce using rule 32 (statement -> statement_compound .)
    WRITE           reduce using rule 32 (statement -> statement_compound .)
    READLN          reduce using rule 32 (statement -> statement_compound .)
    FOR             reduce using rule 32 (statement -> statement_compound .)
    IF              reduce using rule 32 (statement -> statement_compound .)
    WHILE           reduce using rule 32 (statement -> statement_compound .)
    BEGIN           reduce using rule 32 (statement -> statement_compound .)
    ELSE            reduce using rule 32 (statement -> statement_compound .)


state 31

    (35) writeln_statement -> WRITELN . LPAREN writelist RPAREN SEMI

    LPAREN          shift and go to state 47


state 32

    (24) write_statement -> WRITE . LPAREN writelist RPAREN SEMI

    LPAREN          shift and go to state 48


state 33

    (40) readln_statement -> READLN . LPAREN ID RPAREN SEMI

    LPAREN          shift and go to state 49


state 34

    (41) for_statement -> FOR . ID ASSIGN expression TO expression DO statement

    ID              shift and go to state 50


state 35

    (56) if_statement -> IF . expression THEN statement
    (57) if_statement -> IF . expression THEN statement ELSE statement
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 51

state 36

    (58) while_statement -> WHILE . expression DO statement
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 58

state 37

    (14) functions -> function functions .

    BEGIN           reduce using rule 14 (functions -> function functions .)


state 38

    (16) function -> FUNCTION ID . LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI

    LPAREN          shift and go to state 59


state 39

    (5) var_declaration_list -> var_declaration_list var_declaration .

    ID              reduce using rule 5 (var_declaration_list -> var_declaration_list var_declaration .)
    BEGIN           reduce using rule 5 (var_declaration_list -> var_declaration_list var_declaration .)
    FUNCTION        reduce using rule 5 (var_declaration_list -> var_declaration_list var_declaration .)


state 40

    (7) var_declaration -> id_list COLON . type SEMI
    (10) type -> . INTEGER
    (11) type -> . BOOLEAN
    (12) type -> . STRING
    (13) type -> . REAL

    INTEGER         shift and go to state 61
    BOOLEAN         shift and go to state 62
    STRING          shift and go to state 63
    REAL            shift and go to state 64

    type                           shift and go to state 60

state 41

    (9) id_list -> ID COMMA . id_list
    (8) id_list -> . ID
    (9) id_list -> . ID COMMA id_list

    ID              shift and go to state 16

    id_list                        shift and go to state 65

state 42

    (1) program -> PROGRAM ID SEMI declarations functions BEGIN statements . END DOT
    (22) statements -> statements . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    END             shift and go to state 66
    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 46
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 43

    (34) assignment_statement -> ID ASSIGN . expression SEMI
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 67

state 44

    (55) statement_compound -> BEGIN statements . END
    (22) statements -> statements . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    END             shift and go to state 68
    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 46
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 45

    (2) program -> PROGRAM ID SEMI declarations BEGIN statements END . DOT

    DOT             shift and go to state 69


state 46

    (22) statements -> statements statement .

    END             reduce using rule 22 (statements -> statements statement .)
    SEMI            reduce using rule 22 (statements -> statements statement .)
    ID              reduce using rule 22 (statements -> statements statement .)
    WRITELN         reduce using rule 22 (statements -> statements statement .)
    WRITE           reduce using rule 22 (statements -> statements statement .)
    READLN          reduce using rule 22 (statements -> statements statement .)
    FOR             reduce using rule 22 (statements -> statements statement .)
    IF              reduce using rule 22 (statements -> statements statement .)
    WHILE           reduce using rule 22 (statements -> statements statement .)
    BEGIN           reduce using rule 22 (statements -> statements statement .)


state 47

    (35) writeln_statement -> WRITELN LPAREN . writelist RPAREN SEMI
    (36) writelist -> . writelist COMMA writeitem
    (37) writelist -> . writeitem
    (38) writeitem -> . STRING_LITERAL
    (39) writeitem -> . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    STRING_LITERAL  shift and go to state 72
    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    writelist                      shift and go to state 70
    writeitem                      shift and go to state 71
    expression                     shift and go to state 73

state 48

    (24) write_statement -> WRITE LPAREN . writelist RPAREN SEMI
    (36) writelist -> . writelist COMMA writeitem
    (37) writelist -> . writeitem
    (38) writeitem -> . STRING_LITERAL
    (39) writeitem -> . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    STRING_LITERAL  shift and go to state 72
    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    writelist                      shift and go to state 74
    writeitem                      shift and go to state 71
    expression                     shift and go to state 73

state 49

    (40) readln_statement -> READLN LPAREN . ID RPAREN SEMI

    ID              shift and go to state 75


state 50

    (41) for_statement -> FOR ID . ASSIGN expression TO expression DO statement

    ASSIGN          shift and go to state 76


state 51

    (56) if_statement -> IF expression . THEN statement
    (57) if_statement -> IF expression . THEN statement ELSE statement
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    THEN            shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 52

    (21) expression -> ID . LPAREN argument_list RPAREN
    (63) expression -> ID .

    LPAREN          shift and go to state 92
    THEN            reduce using rule 63 (expression -> ID .)
    AND             reduce using rule 63 (expression -> ID .)
    OR              reduce using rule 63 (expression -> ID .)
    LT              reduce using rule 63 (expression -> ID .)
    LE              reduce using rule 63 (expression -> ID .)
    GT              reduce using rule 63 (expression -> ID .)
    GE              reduce using rule 63 (expression -> ID .)
    EQ              reduce using rule 63 (expression -> ID .)
    NEQ             reduce using rule 63 (expression -> ID .)
    DIV             reduce using rule 63 (expression -> ID .)
    MOD             reduce using rule 63 (expression -> ID .)
    PLUS            reduce using rule 63 (expression -> ID .)
    MINUS           reduce using rule 63 (expression -> ID .)
    TIMES           reduce using rule 63 (expression -> ID .)
    DIVIDE          reduce using rule 63 (expression -> ID .)
    DO              reduce using rule 63 (expression -> ID .)
    SEMI            reduce using rule 63 (expression -> ID .)
    RPAREN          reduce using rule 63 (expression -> ID .)
    COMMA           reduce using rule 63 (expression -> ID .)
    TO              reduce using rule 63 (expression -> ID .)


state 53

    (52) expression -> LPAREN . expression RPAREN
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 93

state 54

    (42) expression -> TRUE .

    THEN            reduce using rule 42 (expression -> TRUE .)
    AND             reduce using rule 42 (expression -> TRUE .)
    OR              reduce using rule 42 (expression -> TRUE .)
    LT              reduce using rule 42 (expression -> TRUE .)
    LE              reduce using rule 42 (expression -> TRUE .)
    GT              reduce using rule 42 (expression -> TRUE .)
    GE              reduce using rule 42 (expression -> TRUE .)
    EQ              reduce using rule 42 (expression -> TRUE .)
    NEQ             reduce using rule 42 (expression -> TRUE .)
    DIV             reduce using rule 42 (expression -> TRUE .)
    MOD             reduce using rule 42 (expression -> TRUE .)
    PLUS            reduce using rule 42 (expression -> TRUE .)
    MINUS           reduce using rule 42 (expression -> TRUE .)
    TIMES           reduce using rule 42 (expression -> TRUE .)
    DIVIDE          reduce using rule 42 (expression -> TRUE .)
    DO              reduce using rule 42 (expression -> TRUE .)
    SEMI            reduce using rule 42 (expression -> TRUE .)
    RPAREN          reduce using rule 42 (expression -> TRUE .)
    COMMA           reduce using rule 42 (expression -> TRUE .)
    TO              reduce using rule 42 (expression -> TRUE .)


state 55

    (43) expression -> FALSE .

    THEN            reduce using rule 43 (expression -> FALSE .)
    AND             reduce using rule 43 (expression -> FALSE .)
    OR              reduce using rule 43 (expression -> FALSE .)
    LT              reduce using rule 43 (expression -> FALSE .)
    LE              reduce using rule 43 (expression -> FALSE .)
    GT              reduce using rule 43 (expression -> FALSE .)
    GE              reduce using rule 43 (expression -> FALSE .)
    EQ              reduce using rule 43 (expression -> FALSE .)
    NEQ             reduce using rule 43 (expression -> FALSE .)
    DIV             reduce using rule 43 (expression -> FALSE .)
    MOD             reduce using rule 43 (expression -> FALSE .)
    PLUS            reduce using rule 43 (expression -> FALSE .)
    MINUS           reduce using rule 43 (expression -> FALSE .)
    TIMES           reduce using rule 43 (expression -> FALSE .)
    DIVIDE          reduce using rule 43 (expression -> FALSE .)
    DO              reduce using rule 43 (expression -> FALSE .)
    SEMI            reduce using rule 43 (expression -> FALSE .)
    RPAREN          reduce using rule 43 (expression -> FALSE .)
    COMMA           reduce using rule 43 (expression -> FALSE .)
    TO              reduce using rule 43 (expression -> FALSE .)


state 56

    (64) expression -> NUMBER .

    THEN            reduce using rule 64 (expression -> NUMBER .)
    AND             reduce using rule 64 (expression -> NUMBER .)
    OR              reduce using rule 64 (expression -> NUMBER .)
    LT              reduce using rule 64 (expression -> NUMBER .)
    LE              reduce using rule 64 (expression -> NUMBER .)
    GT              reduce using rule 64 (expression -> NUMBER .)
    GE              reduce using rule 64 (expression -> NUMBER .)
    EQ              reduce using rule 64 (expression -> NUMBER .)
    NEQ             reduce using rule 64 (expression -> NUMBER .)
    DIV             reduce using rule 64 (expression -> NUMBER .)
    MOD             reduce using rule 64 (expression -> NUMBER .)
    PLUS            reduce using rule 64 (expression -> NUMBER .)
    MINUS           reduce using rule 64 (expression -> NUMBER .)
    TIMES           reduce using rule 64 (expression -> NUMBER .)
    DIVIDE          reduce using rule 64 (expression -> NUMBER .)
    DO              reduce using rule 64 (expression -> NUMBER .)
    SEMI            reduce using rule 64 (expression -> NUMBER .)
    RPAREN          reduce using rule 64 (expression -> NUMBER .)
    COMMA           reduce using rule 64 (expression -> NUMBER .)
    TO              reduce using rule 64 (expression -> NUMBER .)


state 57

    (65) expression -> REAL .

    THEN            reduce using rule 65 (expression -> REAL .)
    AND             reduce using rule 65 (expression -> REAL .)
    OR              reduce using rule 65 (expression -> REAL .)
    LT              reduce using rule 65 (expression -> REAL .)
    LE              reduce using rule 65 (expression -> REAL .)
    GT              reduce using rule 65 (expression -> REAL .)
    GE              reduce using rule 65 (expression -> REAL .)
    EQ              reduce using rule 65 (expression -> REAL .)
    NEQ             reduce using rule 65 (expression -> REAL .)
    DIV             reduce using rule 65 (expression -> REAL .)
    MOD             reduce using rule 65 (expression -> REAL .)
    PLUS            reduce using rule 65 (expression -> REAL .)
    MINUS           reduce using rule 65 (expression -> REAL .)
    TIMES           reduce using rule 65 (expression -> REAL .)
    DIVIDE          reduce using rule 65 (expression -> REAL .)
    DO              reduce using rule 65 (expression -> REAL .)
    SEMI            reduce using rule 65 (expression -> REAL .)
    RPAREN          reduce using rule 65 (expression -> REAL .)
    COMMA           reduce using rule 65 (expression -> REAL .)
    TO              reduce using rule 65 (expression -> REAL .)


state 58

    (58) while_statement -> WHILE expression . DO statement
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    DO              shift and go to state 94
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 59

    (16) function -> FUNCTION ID LPAREN . param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI
    (17) param_list -> . ID COLON type
    (18) param_list -> . param_list SEMI ID COLON type

    ID              shift and go to state 95

    param_list                     shift and go to state 96

state 60

    (7) var_declaration -> id_list COLON type . SEMI

    SEMI            shift and go to state 97


state 61

    (10) type -> INTEGER .

    SEMI            reduce using rule 10 (type -> INTEGER .)
    RPAREN          reduce using rule 10 (type -> INTEGER .)


state 62

    (11) type -> BOOLEAN .

    SEMI            reduce using rule 11 (type -> BOOLEAN .)
    RPAREN          reduce using rule 11 (type -> BOOLEAN .)


state 63

    (12) type -> STRING .

    SEMI            reduce using rule 12 (type -> STRING .)
    RPAREN          reduce using rule 12 (type -> STRING .)


state 64

    (13) type -> REAL .

    SEMI            reduce using rule 13 (type -> REAL .)
    RPAREN          reduce using rule 13 (type -> REAL .)


state 65

    (9) id_list -> ID COMMA id_list .

    COLON           reduce using rule 9 (id_list -> ID COMMA id_list .)


state 66

    (1) program -> PROGRAM ID SEMI declarations functions BEGIN statements END . DOT

    DOT             shift and go to state 98


state 67

    (34) assignment_statement -> ID ASSIGN expression . SEMI
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    SEMI            shift and go to state 99
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 68

    (55) statement_compound -> BEGIN statements END .

    END             reduce using rule 55 (statement_compound -> BEGIN statements END .)
    SEMI            reduce using rule 55 (statement_compound -> BEGIN statements END .)
    ID              reduce using rule 55 (statement_compound -> BEGIN statements END .)
    WRITELN         reduce using rule 55 (statement_compound -> BEGIN statements END .)
    WRITE           reduce using rule 55 (statement_compound -> BEGIN statements END .)
    READLN          reduce using rule 55 (statement_compound -> BEGIN statements END .)
    FOR             reduce using rule 55 (statement_compound -> BEGIN statements END .)
    IF              reduce using rule 55 (statement_compound -> BEGIN statements END .)
    WHILE           reduce using rule 55 (statement_compound -> BEGIN statements END .)
    BEGIN           reduce using rule 55 (statement_compound -> BEGIN statements END .)
    ELSE            reduce using rule 55 (statement_compound -> BEGIN statements END .)


state 69

    (2) program -> PROGRAM ID SEMI declarations BEGIN statements END DOT .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMI declarations BEGIN statements END DOT .)


state 70

    (35) writeln_statement -> WRITELN LPAREN writelist . RPAREN SEMI
    (36) writelist -> writelist . COMMA writeitem

    RPAREN          shift and go to state 100
    COMMA           shift and go to state 101


state 71

    (37) writelist -> writeitem .

    RPAREN          reduce using rule 37 (writelist -> writeitem .)
    COMMA           reduce using rule 37 (writelist -> writeitem .)


state 72

    (38) writeitem -> STRING_LITERAL .

    RPAREN          reduce using rule 38 (writeitem -> STRING_LITERAL .)
    COMMA           reduce using rule 38 (writeitem -> STRING_LITERAL .)


state 73

    (39) writeitem -> expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 39 (writeitem -> expression .)
    COMMA           reduce using rule 39 (writeitem -> expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 74

    (24) write_statement -> WRITE LPAREN writelist . RPAREN SEMI
    (36) writelist -> writelist . COMMA writeitem

    RPAREN          shift and go to state 102
    COMMA           shift and go to state 101


state 75

    (40) readln_statement -> READLN LPAREN ID . RPAREN SEMI

    RPAREN          shift and go to state 103


state 76

    (41) for_statement -> FOR ID ASSIGN . expression TO expression DO statement
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 104

state 77

    (56) if_statement -> IF expression THEN . statement
    (57) if_statement -> IF expression THEN . statement ELSE statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 105
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 78

    (44) expression -> expression AND . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 106

state 79

    (45) expression -> expression OR . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 107

state 80

    (46) expression -> expression LT . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 108

state 81

    (47) expression -> expression LE . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 109

state 82

    (48) expression -> expression GT . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 110

state 83

    (49) expression -> expression GE . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 111

state 84

    (50) expression -> expression EQ . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 112

state 85

    (51) expression -> expression NEQ . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 113

state 86

    (53) expression -> expression DIV . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 114

state 87

    (54) expression -> expression MOD . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 115

state 88

    (59) expression -> expression PLUS . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 116

state 89

    (60) expression -> expression MINUS . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 117

state 90

    (61) expression -> expression TIMES . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 118

state 91

    (62) expression -> expression DIVIDE . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 119

state 92

    (21) expression -> ID LPAREN . argument_list RPAREN
    (19) argument_list -> . expression
    (20) argument_list -> . argument_list COMMA expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    argument_list                  shift and go to state 120
    expression                     shift and go to state 121

state 93

    (52) expression -> LPAREN expression . RPAREN
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 122
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 94

    (58) while_statement -> WHILE expression DO . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 123
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 95

    (17) param_list -> ID . COLON type

    COLON           shift and go to state 124


state 96

    (16) function -> FUNCTION ID LPAREN param_list . RPAREN COLON type SEMI declarations BEGIN statements END SEMI
    (18) param_list -> param_list . SEMI ID COLON type

    RPAREN          shift and go to state 125
    SEMI            shift and go to state 126


state 97

    (7) var_declaration -> id_list COLON type SEMI .

    ID              reduce using rule 7 (var_declaration -> id_list COLON type SEMI .)
    BEGIN           reduce using rule 7 (var_declaration -> id_list COLON type SEMI .)
    FUNCTION        reduce using rule 7 (var_declaration -> id_list COLON type SEMI .)


state 98

    (1) program -> PROGRAM ID SEMI declarations functions BEGIN statements END DOT .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMI declarations functions BEGIN statements END DOT .)


state 99

    (34) assignment_statement -> ID ASSIGN expression SEMI .

    END             reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    SEMI            reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    ID              reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    WRITELN         reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    WRITE           reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    READLN          reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    FOR             reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    IF              reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    WHILE           reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    BEGIN           reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)
    ELSE            reduce using rule 34 (assignment_statement -> ID ASSIGN expression SEMI .)


state 100

    (35) writeln_statement -> WRITELN LPAREN writelist RPAREN . SEMI

    SEMI            shift and go to state 127


state 101

    (36) writelist -> writelist COMMA . writeitem
    (38) writeitem -> . STRING_LITERAL
    (39) writeitem -> . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    STRING_LITERAL  shift and go to state 72
    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    writeitem                      shift and go to state 128
    expression                     shift and go to state 73

state 102

    (24) write_statement -> WRITE LPAREN writelist RPAREN . SEMI

    SEMI            shift and go to state 129


state 103

    (40) readln_statement -> READLN LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 130


state 104

    (41) for_statement -> FOR ID ASSIGN expression . TO expression DO statement
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    TO              shift and go to state 131
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 105

    (56) if_statement -> IF expression THEN statement .
    (57) if_statement -> IF expression THEN statement . ELSE statement

    END             reduce using rule 56 (if_statement -> IF expression THEN statement .)
    SEMI            reduce using rule 56 (if_statement -> IF expression THEN statement .)
    ID              reduce using rule 56 (if_statement -> IF expression THEN statement .)
    WRITELN         reduce using rule 56 (if_statement -> IF expression THEN statement .)
    WRITE           reduce using rule 56 (if_statement -> IF expression THEN statement .)
    READLN          reduce using rule 56 (if_statement -> IF expression THEN statement .)
    FOR             reduce using rule 56 (if_statement -> IF expression THEN statement .)
    IF              reduce using rule 56 (if_statement -> IF expression THEN statement .)
    WHILE           reduce using rule 56 (if_statement -> IF expression THEN statement .)
    BEGIN           reduce using rule 56 (if_statement -> IF expression THEN statement .)
    ELSE            reduce using rule 56 (if_statement -> IF expression THEN statement .)

  ! ELSE            [ shift and go to state 132 ]


state 106

    (44) expression -> expression AND expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 44 (expression -> expression AND expression .)
    DO              reduce using rule 44 (expression -> expression AND expression .)
    SEMI            reduce using rule 44 (expression -> expression AND expression .)
    RPAREN          reduce using rule 44 (expression -> expression AND expression .)
    COMMA           reduce using rule 44 (expression -> expression AND expression .)
    TO              reduce using rule 44 (expression -> expression AND expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression AND expression .) ]


state 107

    (45) expression -> expression OR expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 45 (expression -> expression OR expression .)
    DO              reduce using rule 45 (expression -> expression OR expression .)
    SEMI            reduce using rule 45 (expression -> expression OR expression .)
    RPAREN          reduce using rule 45 (expression -> expression OR expression .)
    COMMA           reduce using rule 45 (expression -> expression OR expression .)
    TO              reduce using rule 45 (expression -> expression OR expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression OR expression .) ]


state 108

    (46) expression -> expression LT expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 46 (expression -> expression LT expression .)
    DO              reduce using rule 46 (expression -> expression LT expression .)
    SEMI            reduce using rule 46 (expression -> expression LT expression .)
    RPAREN          reduce using rule 46 (expression -> expression LT expression .)
    COMMA           reduce using rule 46 (expression -> expression LT expression .)
    TO              reduce using rule 46 (expression -> expression LT expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression LT expression .) ]


state 109

    (47) expression -> expression LE expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 47 (expression -> expression LE expression .)
    DO              reduce using rule 47 (expression -> expression LE expression .)
    SEMI            reduce using rule 47 (expression -> expression LE expression .)
    RPAREN          reduce using rule 47 (expression -> expression LE expression .)
    COMMA           reduce using rule 47 (expression -> expression LE expression .)
    TO              reduce using rule 47 (expression -> expression LE expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LE expression .) ]


state 110

    (48) expression -> expression GT expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 48 (expression -> expression GT expression .)
    DO              reduce using rule 48 (expression -> expression GT expression .)
    SEMI            reduce using rule 48 (expression -> expression GT expression .)
    RPAREN          reduce using rule 48 (expression -> expression GT expression .)
    COMMA           reduce using rule 48 (expression -> expression GT expression .)
    TO              reduce using rule 48 (expression -> expression GT expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression GT expression .) ]


state 111

    (49) expression -> expression GE expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 49 (expression -> expression GE expression .)
    DO              reduce using rule 49 (expression -> expression GE expression .)
    SEMI            reduce using rule 49 (expression -> expression GE expression .)
    RPAREN          reduce using rule 49 (expression -> expression GE expression .)
    COMMA           reduce using rule 49 (expression -> expression GE expression .)
    TO              reduce using rule 49 (expression -> expression GE expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! NEQ             [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression GE expression .) ]


state 112

    (50) expression -> expression EQ expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 50 (expression -> expression EQ expression .)
    DO              reduce using rule 50 (expression -> expression EQ expression .)
    SEMI            reduce using rule 50 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 50 (expression -> expression EQ expression .)
    COMMA           reduce using rule 50 (expression -> expression EQ expression .)
    TO              reduce using rule 50 (expression -> expression EQ expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression EQ expression .) ]


state 113

    (51) expression -> expression NEQ expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 51 (expression -> expression NEQ expression .)
    DO              reduce using rule 51 (expression -> expression NEQ expression .)
    SEMI            reduce using rule 51 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 51 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 51 (expression -> expression NEQ expression .)
    TO              reduce using rule 51 (expression -> expression NEQ expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression NEQ expression .) ]


state 114

    (53) expression -> expression DIV expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 53 (expression -> expression DIV expression .)
    DO              reduce using rule 53 (expression -> expression DIV expression .)
    SEMI            reduce using rule 53 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 53 (expression -> expression DIV expression .)
    COMMA           reduce using rule 53 (expression -> expression DIV expression .)
    TO              reduce using rule 53 (expression -> expression DIV expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression DIV expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression DIV expression .) ]


state 115

    (54) expression -> expression MOD expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 54 (expression -> expression MOD expression .)
    DO              reduce using rule 54 (expression -> expression MOD expression .)
    SEMI            reduce using rule 54 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 54 (expression -> expression MOD expression .)
    COMMA           reduce using rule 54 (expression -> expression MOD expression .)
    TO              reduce using rule 54 (expression -> expression MOD expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression MOD expression .) ]


state 116

    (59) expression -> expression PLUS expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 59 (expression -> expression PLUS expression .)
    DO              reduce using rule 59 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 59 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 59 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 59 (expression -> expression PLUS expression .)
    TO              reduce using rule 59 (expression -> expression PLUS expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression PLUS expression .) ]


state 117

    (60) expression -> expression MINUS expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 60 (expression -> expression MINUS expression .)
    DO              reduce using rule 60 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 60 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 60 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 60 (expression -> expression MINUS expression .)
    TO              reduce using rule 60 (expression -> expression MINUS expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression MINUS expression .) ]


state 118

    (61) expression -> expression TIMES expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 61 (expression -> expression TIMES expression .)
    DO              reduce using rule 61 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 61 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 61 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 61 (expression -> expression TIMES expression .)
    TO              reduce using rule 61 (expression -> expression TIMES expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! DIV             [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! PLUS            [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression TIMES expression .) ]


state 119

    (62) expression -> expression DIVIDE expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 62 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 62 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 62 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 62 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 62 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 62 (expression -> expression DIVIDE expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91

  ! AND             [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! NEQ             [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! DIV             [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! MOD             [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> expression DIVIDE expression .) ]


state 120

    (21) expression -> ID LPAREN argument_list . RPAREN
    (20) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 133
    COMMA           shift and go to state 134


state 121

    (19) argument_list -> expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 19 (argument_list -> expression .)
    COMMA           reduce using rule 19 (argument_list -> expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 122

    (52) expression -> LPAREN expression RPAREN .

    THEN            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 52 (expression -> LPAREN expression RPAREN .)


state 123

    (58) while_statement -> WHILE expression DO statement .

    END             reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    SEMI            reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    ID              reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    WRITELN         reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    WRITE           reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    READLN          reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    FOR             reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    IF              reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    WHILE           reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    BEGIN           reduce using rule 58 (while_statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 58 (while_statement -> WHILE expression DO statement .)


state 124

    (17) param_list -> ID COLON . type
    (10) type -> . INTEGER
    (11) type -> . BOOLEAN
    (12) type -> . STRING
    (13) type -> . REAL

    INTEGER         shift and go to state 61
    BOOLEAN         shift and go to state 62
    STRING          shift and go to state 63
    REAL            shift and go to state 64

    type                           shift and go to state 135

state 125

    (16) function -> FUNCTION ID LPAREN param_list RPAREN . COLON type SEMI declarations BEGIN statements END SEMI

    COLON           shift and go to state 136


state 126

    (18) param_list -> param_list SEMI . ID COLON type

    ID              shift and go to state 137


state 127

    (35) writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .

    END             reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    SEMI            reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    ID              reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    WRITELN         reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    WRITE           reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    READLN          reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    FOR             reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    IF              reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    WHILE           reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    BEGIN           reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    ELSE            reduce using rule 35 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)


state 128

    (36) writelist -> writelist COMMA writeitem .

    RPAREN          reduce using rule 36 (writelist -> writelist COMMA writeitem .)
    COMMA           reduce using rule 36 (writelist -> writelist COMMA writeitem .)


state 129

    (24) write_statement -> WRITE LPAREN writelist RPAREN SEMI .

    END             reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    SEMI            reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    ID              reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    WRITELN         reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    WRITE           reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    READLN          reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    FOR             reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    IF              reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    WHILE           reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    BEGIN           reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)
    ELSE            reduce using rule 24 (write_statement -> WRITE LPAREN writelist RPAREN SEMI .)


state 130

    (40) readln_statement -> READLN LPAREN ID RPAREN SEMI .

    END             reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    SEMI            reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    WRITELN         reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    WRITE           reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    READLN          reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    FOR             reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    IF              reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    WHILE           reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    BEGIN           reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    ELSE            reduce using rule 40 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)


state 131

    (41) for_statement -> FOR ID ASSIGN expression TO . expression DO statement
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 138

state 132

    (57) if_statement -> IF expression THEN statement ELSE . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 139
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 133

    (21) expression -> ID LPAREN argument_list RPAREN .

    THEN            reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    LE              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    GE              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    DIV             reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    MOD             reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    DO              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    SEMI            reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)
    TO              reduce using rule 21 (expression -> ID LPAREN argument_list RPAREN .)


state 134

    (20) argument_list -> argument_list COMMA . expression
    (21) expression -> . ID LPAREN argument_list RPAREN
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression LE expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression GE expression
    (50) expression -> . expression EQ expression
    (51) expression -> . expression NEQ expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression DIV expression
    (54) expression -> . expression MOD expression
    (59) expression -> . expression PLUS expression
    (60) expression -> . expression MINUS expression
    (61) expression -> . expression TIMES expression
    (62) expression -> . expression DIVIDE expression
    (63) expression -> . ID
    (64) expression -> . NUMBER
    (65) expression -> . REAL

    ID              shift and go to state 52
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 56
    REAL            shift and go to state 57

    expression                     shift and go to state 140

state 135

    (17) param_list -> ID COLON type .

    RPAREN          reduce using rule 17 (param_list -> ID COLON type .)
    SEMI            reduce using rule 17 (param_list -> ID COLON type .)


state 136

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON . type SEMI declarations BEGIN statements END SEMI
    (10) type -> . INTEGER
    (11) type -> . BOOLEAN
    (12) type -> . STRING
    (13) type -> . REAL

    INTEGER         shift and go to state 61
    BOOLEAN         shift and go to state 62
    STRING          shift and go to state 63
    REAL            shift and go to state 64

    type                           shift and go to state 141

state 137

    (18) param_list -> param_list SEMI ID . COLON type

    COLON           shift and go to state 142


state 138

    (41) for_statement -> FOR ID ASSIGN expression TO expression . DO statement
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    DO              shift and go to state 143
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 139

    (57) if_statement -> IF expression THEN statement ELSE statement .

    END             reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    SEMI            reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    ID              reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    WRITELN         reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    WRITE           reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    READLN          reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    FOR             reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    IF              reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    WHILE           reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    BEGIN           reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)
    ELSE            reduce using rule 57 (if_statement -> IF expression THEN statement ELSE statement .)


state 140

    (20) argument_list -> argument_list COMMA expression .
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . LE expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . GE expression
    (50) expression -> expression . EQ expression
    (51) expression -> expression . NEQ expression
    (53) expression -> expression . DIV expression
    (54) expression -> expression . MOD expression
    (59) expression -> expression . PLUS expression
    (60) expression -> expression . MINUS expression
    (61) expression -> expression . TIMES expression
    (62) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 20 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 20 (argument_list -> argument_list COMMA expression .)
    AND             shift and go to state 78
    OR              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    GT              shift and go to state 82
    GE              shift and go to state 83
    EQ              shift and go to state 84
    NEQ             shift and go to state 85
    DIV             shift and go to state 86
    MOD             shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    TIMES           shift and go to state 90
    DIVIDE          shift and go to state 91


state 141

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type . SEMI declarations BEGIN statements END SEMI

    SEMI            shift and go to state 144


state 142

    (18) param_list -> param_list SEMI ID COLON . type
    (10) type -> . INTEGER
    (11) type -> . BOOLEAN
    (12) type -> . STRING
    (13) type -> . REAL

    INTEGER         shift and go to state 61
    BOOLEAN         shift and go to state 62
    STRING          shift and go to state 63
    REAL            shift and go to state 64

    type                           shift and go to state 145

state 143

    (41) for_statement -> FOR ID ASSIGN expression TO expression DO . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 146
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 144

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI . declarations BEGIN statements END SEMI
    (3) declarations -> . VAR var_declaration_list
    (4) declarations -> . empty
    (66) empty -> .

    VAR             shift and go to state 6
    BEGIN           reduce using rule 66 (empty -> .)

    declarations                   shift and go to state 147
    empty                          shift and go to state 7

state 145

    (18) param_list -> param_list SEMI ID COLON type .

    RPAREN          reduce using rule 18 (param_list -> param_list SEMI ID COLON type .)
    SEMI            reduce using rule 18 (param_list -> param_list SEMI ID COLON type .)


state 146

    (41) for_statement -> FOR ID ASSIGN expression TO expression DO statement .

    END             reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    SEMI            reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    ID              reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WRITELN         reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WRITE           reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    READLN          reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    FOR             reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    IF              reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WHILE           reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    BEGIN           reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    ELSE            reduce using rule 41 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)


state 147

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations . BEGIN statements END SEMI

    BEGIN           shift and go to state 148


state 148

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN . statements END SEMI
    (22) statements -> . statements statement
    (23) statements -> . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statements                     shift and go to state 149
    statement                      shift and go to state 22
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 149

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements . END SEMI
    (22) statements -> statements . statement
    (25) statement -> . assignment_statement
    (26) statement -> . writeln_statement
    (27) statement -> . write_statement
    (28) statement -> . readln_statement
    (29) statement -> . for_statement
    (30) statement -> . if_statement
    (31) statement -> . while_statement
    (32) statement -> . statement_compound
    (33) statement -> . SEMI
    (34) assignment_statement -> . ID ASSIGN expression SEMI
    (35) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (24) write_statement -> . WRITE LPAREN writelist RPAREN SEMI
    (40) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (41) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) if_statement -> . IF expression THEN statement
    (57) if_statement -> . IF expression THEN statement ELSE statement
    (58) while_statement -> . WHILE expression DO statement
    (55) statement_compound -> . BEGIN statements END

    END             shift and go to state 150
    SEMI            shift and go to state 19
    ID              shift and go to state 18
    WRITELN         shift and go to state 31
    WRITE           shift and go to state 32
    READLN          shift and go to state 33
    FOR             shift and go to state 34
    IF              shift and go to state 35
    WHILE           shift and go to state 36
    BEGIN           shift and go to state 20

    statement                      shift and go to state 46
    assignment_statement           shift and go to state 23
    writeln_statement              shift and go to state 24
    write_statement                shift and go to state 25
    readln_statement               shift and go to state 26
    for_statement                  shift and go to state 27
    if_statement                   shift and go to state 28
    while_statement                shift and go to state 29
    statement_compound             shift and go to state 30

state 150

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END . SEMI

    SEMI            shift and go to state 151


state 151

    (16) function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI .

    FUNCTION        reduce using rule 16 (function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI .)
    BEGIN           reduce using rule 16 (function -> FUNCTION ID LPAREN param_list RPAREN COLON type SEMI declarations BEGIN statements END SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEGIN in state 5 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for LT in state 106 resolved as shift
WARNING: shift/reduce conflict for LE in state 106 resolved as shift
WARNING: shift/reduce conflict for GT in state 106 resolved as shift
WARNING: shift/reduce conflict for GE in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for DIV in state 106 resolved as shift
WARNING: shift/reduce conflict for MOD in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for LE in state 107 resolved as shift
WARNING: shift/reduce conflict for GT in state 107 resolved as shift
WARNING: shift/reduce conflict for GE in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for DIV in state 107 resolved as shift
WARNING: shift/reduce conflict for MOD in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for LT in state 108 resolved as shift
WARNING: shift/reduce conflict for LE in state 108 resolved as shift
WARNING: shift/reduce conflict for GT in state 108 resolved as shift
WARNING: shift/reduce conflict for GE in state 108 resolved as shift
WARNING: shift/reduce conflict for EQ in state 108 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for DIV in state 108 resolved as shift
WARNING: shift/reduce conflict for MOD in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for LT in state 109 resolved as shift
WARNING: shift/reduce conflict for LE in state 109 resolved as shift
WARNING: shift/reduce conflict for GT in state 109 resolved as shift
WARNING: shift/reduce conflict for GE in state 109 resolved as shift
WARNING: shift/reduce conflict for EQ in state 109 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for DIV in state 109 resolved as shift
WARNING: shift/reduce conflict for MOD in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for LT in state 110 resolved as shift
WARNING: shift/reduce conflict for LE in state 110 resolved as shift
WARNING: shift/reduce conflict for GT in state 110 resolved as shift
WARNING: shift/reduce conflict for GE in state 110 resolved as shift
WARNING: shift/reduce conflict for EQ in state 110 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 110 resolved as shift
WARNING: shift/reduce conflict for DIV in state 110 resolved as shift
WARNING: shift/reduce conflict for MOD in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for LT in state 111 resolved as shift
WARNING: shift/reduce conflict for LE in state 111 resolved as shift
WARNING: shift/reduce conflict for GT in state 111 resolved as shift
WARNING: shift/reduce conflict for GE in state 111 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 111 resolved as shift
WARNING: shift/reduce conflict for DIV in state 111 resolved as shift
WARNING: shift/reduce conflict for MOD in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for LT in state 112 resolved as shift
WARNING: shift/reduce conflict for LE in state 112 resolved as shift
WARNING: shift/reduce conflict for GT in state 112 resolved as shift
WARNING: shift/reduce conflict for GE in state 112 resolved as shift
WARNING: shift/reduce conflict for EQ in state 112 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 112 resolved as shift
WARNING: shift/reduce conflict for DIV in state 112 resolved as shift
WARNING: shift/reduce conflict for MOD in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for LT in state 113 resolved as shift
WARNING: shift/reduce conflict for LE in state 113 resolved as shift
WARNING: shift/reduce conflict for GT in state 113 resolved as shift
WARNING: shift/reduce conflict for GE in state 113 resolved as shift
WARNING: shift/reduce conflict for EQ in state 113 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 113 resolved as shift
WARNING: shift/reduce conflict for DIV in state 113 resolved as shift
WARNING: shift/reduce conflict for MOD in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 114 resolved as shift
WARNING: shift/reduce conflict for OR in state 114 resolved as shift
WARNING: shift/reduce conflict for LT in state 114 resolved as shift
WARNING: shift/reduce conflict for LE in state 114 resolved as shift
WARNING: shift/reduce conflict for GT in state 114 resolved as shift
WARNING: shift/reduce conflict for GE in state 114 resolved as shift
WARNING: shift/reduce conflict for EQ in state 114 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 114 resolved as shift
WARNING: shift/reduce conflict for DIV in state 114 resolved as shift
WARNING: shift/reduce conflict for MOD in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for LT in state 115 resolved as shift
WARNING: shift/reduce conflict for LE in state 115 resolved as shift
WARNING: shift/reduce conflict for GT in state 115 resolved as shift
WARNING: shift/reduce conflict for GE in state 115 resolved as shift
WARNING: shift/reduce conflict for EQ in state 115 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 115 resolved as shift
WARNING: shift/reduce conflict for DIV in state 115 resolved as shift
WARNING: shift/reduce conflict for MOD in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for LT in state 116 resolved as shift
WARNING: shift/reduce conflict for LE in state 116 resolved as shift
WARNING: shift/reduce conflict for GT in state 116 resolved as shift
WARNING: shift/reduce conflict for GE in state 116 resolved as shift
WARNING: shift/reduce conflict for EQ in state 116 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 116 resolved as shift
WARNING: shift/reduce conflict for DIV in state 116 resolved as shift
WARNING: shift/reduce conflict for MOD in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 116 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for LT in state 117 resolved as shift
WARNING: shift/reduce conflict for LE in state 117 resolved as shift
WARNING: shift/reduce conflict for GT in state 117 resolved as shift
WARNING: shift/reduce conflict for GE in state 117 resolved as shift
WARNING: shift/reduce conflict for EQ in state 117 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for MOD in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for LT in state 118 resolved as shift
WARNING: shift/reduce conflict for LE in state 118 resolved as shift
WARNING: shift/reduce conflict for GT in state 118 resolved as shift
WARNING: shift/reduce conflict for GE in state 118 resolved as shift
WARNING: shift/reduce conflict for EQ in state 118 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 118 resolved as shift
WARNING: shift/reduce conflict for DIV in state 118 resolved as shift
WARNING: shift/reduce conflict for MOD in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for LT in state 119 resolved as shift
WARNING: shift/reduce conflict for LE in state 119 resolved as shift
WARNING: shift/reduce conflict for GT in state 119 resolved as shift
WARNING: shift/reduce conflict for GE in state 119 resolved as shift
WARNING: shift/reduce conflict for EQ in state 119 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 119 resolved as shift
WARNING: shift/reduce conflict for DIV in state 119 resolved as shift
WARNING: shift/reduce conflict for MOD in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 119 resolved as shift
