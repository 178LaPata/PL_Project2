Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    CASE
    CONST
    DOTDOT
    DOWNTO
    FILE
    FUNCTION
    GOTO
    IN
    LABEL
    LBRACKET
    NIL
    NOT
    OF
    PACKED
    PROCEDURE
    RBRACKET
    READ
    REAL
    RECORD
    REPEAT
    SET
    TYPE
    UNTIL
    WITH
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMI declarations BEGIN statements END DOT
Rule 2     declarations -> VAR var_declaration_list
Rule 3     declarations -> empty
Rule 4     var_declaration_list -> var_declaration_list var_declaration
Rule 5     var_declaration_list -> var_declaration
Rule 6     var_declaration -> id_list COLON type SEMI
Rule 7     id_list -> ID
Rule 8     id_list -> ID COMMA id_list
Rule 9     type -> INTEGER
Rule 10    type -> BOOLEAN
Rule 11    type -> STRING
Rule 12    statements -> statements statement
Rule 13    statements -> statement
Rule 14    statement -> assignment_statement
Rule 15    statement -> writeln_statement
Rule 16    statement -> readln_statement
Rule 17    statement -> for_statement
Rule 18    statement -> SEMI
Rule 19    assignment_statement -> ID ASSIGN expression SEMI
Rule 20    writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI
Rule 21    writelist -> writelist COMMA writeitem
Rule 22    writelist -> writeitem
Rule 23    writeitem -> STRING_LITERAL
Rule 24    writeitem -> expression
Rule 25    readln_statement -> READLN LPAREN ID RPAREN SEMI
Rule 26    for_statement -> FOR ID ASSIGN expression TO expression DO statement
Rule 27    expression -> TRUE
Rule 28    expression -> FALSE
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression OR expression
Rule 31    expression -> expression LT expression
Rule 32    expression -> expression LE expression
Rule 33    expression -> expression GT expression
Rule 34    expression -> expression GE expression
Rule 35    expression -> expression EQ expression
Rule 36    expression -> expression NEQ expression
Rule 37    expression -> LPAREN expression RPAREN
Rule 38    expression -> expression DIV expression
Rule 39    expression -> expression MOD expression
Rule 40    statement -> BEGIN statements END
Rule 41    statement -> IF expression THEN statement
Rule 42    statement -> IF expression THEN statement ELSE statement
Rule 43    statement -> WHILE expression DO statement
Rule 44    expression -> expression PLUS expression
Rule 45    expression -> expression MINUS expression
Rule 46    expression -> expression TIMES expression
Rule 47    expression -> expression DIVIDE expression
Rule 48    expression -> NUMBER
Rule 49    expression -> ID
Rule 50    empty -> <empty>

Terminals, with rules where they appear

AND                  : 29
ARRAY                : 
ASSIGN               : 19 26
BEGIN                : 1 40
BOOLEAN              : 10
CASE                 : 
COLON                : 6
COMMA                : 8 21
CONST                : 
DIV                  : 38
DIVIDE               : 47
DO                   : 26 43
DOT                  : 1
DOTDOT               : 
DOWNTO               : 
ELSE                 : 42
END                  : 1 40
EQ                   : 35
FALSE                : 28
FILE                 : 
FOR                  : 26
FUNCTION             : 
GE                   : 34
GOTO                 : 
GT                   : 33
ID                   : 1 7 8 19 25 26 49
IF                   : 41 42
IN                   : 
INTEGER              : 9
LABEL                : 
LBRACKET             : 
LE                   : 32
LPAREN               : 20 25 37
LT                   : 31
MINUS                : 45
MOD                  : 39
NEQ                  : 36
NIL                  : 
NOT                  : 
NUMBER               : 48
OF                   : 
OR                   : 30
PACKED               : 
PLUS                 : 44
PROCEDURE            : 
PROGRAM              : 1
RBRACKET             : 
READ                 : 
READLN               : 25
REAL                 : 
RECORD               : 
REPEAT               : 
RPAREN               : 20 25 37
SEMI                 : 1 6 18 19 20 25
SET                  : 
STRING               : 11
STRING_LITERAL       : 23
THEN                 : 41 42
TIMES                : 46
TO                   : 26
TRUE                 : 27
TYPE                 : 
UNTIL                : 
VAR                  : 2
WHILE                : 43
WITH                 : 
WRITE                : 
WRITELN              : 20
error                : 

Nonterminals, with rules where they appear

assignment_statement : 14
declarations         : 1
empty                : 3
expression           : 19 24 26 26 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38 38 39 39 41 42 43 44 44 45 45 46 46 47 47
for_statement        : 17
id_list              : 6 8
program              : 0
readln_statement     : 16
statement            : 12 13 26 41 42 42 43
statements           : 1 12 40
type                 : 6
var_declaration      : 4 5
var_declaration_list : 2 4
writeitem            : 21 22
writelist            : 20 21
writeln_statement    : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMI declarations BEGIN statements END DOT

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMI declarations BEGIN statements END DOT

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMI declarations BEGIN statements END DOT

    SEMI            shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMI . declarations BEGIN statements END DOT
    (2) declarations -> . VAR var_declaration_list
    (3) declarations -> . empty
    (50) empty -> .

    VAR             shift and go to state 6
    BEGIN           reduce using rule 50 (empty -> .)

    declarations                   shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMI declarations . BEGIN statements END DOT

    BEGIN           shift and go to state 8


state 6

    (2) declarations -> VAR . var_declaration_list
    (4) var_declaration_list -> . var_declaration_list var_declaration
    (5) var_declaration_list -> . var_declaration
    (6) var_declaration -> . id_list COLON type SEMI
    (7) id_list -> . ID
    (8) id_list -> . ID COMMA id_list

    ID              shift and go to state 12

    var_declaration_list           shift and go to state 9
    var_declaration                shift and go to state 10
    id_list                        shift and go to state 11

state 7

    (3) declarations -> empty .

    BEGIN           reduce using rule 3 (declarations -> empty .)


state 8

    (1) program -> PROGRAM ID SEMI declarations BEGIN . statements END DOT
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statements                     shift and go to state 16
    statement                      shift and go to state 17
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 9

    (2) declarations -> VAR var_declaration_list .
    (4) var_declaration_list -> var_declaration_list . var_declaration
    (6) var_declaration -> . id_list COLON type SEMI
    (7) id_list -> . ID
    (8) id_list -> . ID COMMA id_list

    BEGIN           reduce using rule 2 (declarations -> VAR var_declaration_list .)
    ID              shift and go to state 12

    var_declaration                shift and go to state 27
    id_list                        shift and go to state 11

state 10

    (5) var_declaration_list -> var_declaration .

    ID              reduce using rule 5 (var_declaration_list -> var_declaration .)
    BEGIN           reduce using rule 5 (var_declaration_list -> var_declaration .)


state 11

    (6) var_declaration -> id_list . COLON type SEMI

    COLON           shift and go to state 28


state 12

    (7) id_list -> ID .
    (8) id_list -> ID . COMMA id_list

    COLON           reduce using rule 7 (id_list -> ID .)
    COMMA           shift and go to state 29


state 13

    (19) assignment_statement -> ID . ASSIGN expression SEMI

    ASSIGN          shift and go to state 30


state 14

    (18) statement -> SEMI .

    END             reduce using rule 18 (statement -> SEMI .)
    SEMI            reduce using rule 18 (statement -> SEMI .)
    BEGIN           reduce using rule 18 (statement -> SEMI .)
    IF              reduce using rule 18 (statement -> SEMI .)
    WHILE           reduce using rule 18 (statement -> SEMI .)
    ID              reduce using rule 18 (statement -> SEMI .)
    WRITELN         reduce using rule 18 (statement -> SEMI .)
    READLN          reduce using rule 18 (statement -> SEMI .)
    FOR             reduce using rule 18 (statement -> SEMI .)
    ELSE            reduce using rule 18 (statement -> SEMI .)


state 15

    (40) statement -> BEGIN . statements END
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statements                     shift and go to state 31
    statement                      shift and go to state 17
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 16

    (1) program -> PROGRAM ID SEMI declarations BEGIN statements . END DOT
    (12) statements -> statements . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    END             shift and go to state 32
    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statement                      shift and go to state 33
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 17

    (13) statements -> statement .

    END             reduce using rule 13 (statements -> statement .)
    SEMI            reduce using rule 13 (statements -> statement .)
    BEGIN           reduce using rule 13 (statements -> statement .)
    IF              reduce using rule 13 (statements -> statement .)
    WHILE           reduce using rule 13 (statements -> statement .)
    ID              reduce using rule 13 (statements -> statement .)
    WRITELN         reduce using rule 13 (statements -> statement .)
    READLN          reduce using rule 13 (statements -> statement .)
    FOR             reduce using rule 13 (statements -> statement .)


state 18

    (14) statement -> assignment_statement .

    END             reduce using rule 14 (statement -> assignment_statement .)
    SEMI            reduce using rule 14 (statement -> assignment_statement .)
    BEGIN           reduce using rule 14 (statement -> assignment_statement .)
    IF              reduce using rule 14 (statement -> assignment_statement .)
    WHILE           reduce using rule 14 (statement -> assignment_statement .)
    ID              reduce using rule 14 (statement -> assignment_statement .)
    WRITELN         reduce using rule 14 (statement -> assignment_statement .)
    READLN          reduce using rule 14 (statement -> assignment_statement .)
    FOR             reduce using rule 14 (statement -> assignment_statement .)
    ELSE            reduce using rule 14 (statement -> assignment_statement .)


state 19

    (15) statement -> writeln_statement .

    END             reduce using rule 15 (statement -> writeln_statement .)
    SEMI            reduce using rule 15 (statement -> writeln_statement .)
    BEGIN           reduce using rule 15 (statement -> writeln_statement .)
    IF              reduce using rule 15 (statement -> writeln_statement .)
    WHILE           reduce using rule 15 (statement -> writeln_statement .)
    ID              reduce using rule 15 (statement -> writeln_statement .)
    WRITELN         reduce using rule 15 (statement -> writeln_statement .)
    READLN          reduce using rule 15 (statement -> writeln_statement .)
    FOR             reduce using rule 15 (statement -> writeln_statement .)
    ELSE            reduce using rule 15 (statement -> writeln_statement .)


state 20

    (16) statement -> readln_statement .

    END             reduce using rule 16 (statement -> readln_statement .)
    SEMI            reduce using rule 16 (statement -> readln_statement .)
    BEGIN           reduce using rule 16 (statement -> readln_statement .)
    IF              reduce using rule 16 (statement -> readln_statement .)
    WHILE           reduce using rule 16 (statement -> readln_statement .)
    ID              reduce using rule 16 (statement -> readln_statement .)
    WRITELN         reduce using rule 16 (statement -> readln_statement .)
    READLN          reduce using rule 16 (statement -> readln_statement .)
    FOR             reduce using rule 16 (statement -> readln_statement .)
    ELSE            reduce using rule 16 (statement -> readln_statement .)


state 21

    (17) statement -> for_statement .

    END             reduce using rule 17 (statement -> for_statement .)
    SEMI            reduce using rule 17 (statement -> for_statement .)
    BEGIN           reduce using rule 17 (statement -> for_statement .)
    IF              reduce using rule 17 (statement -> for_statement .)
    WHILE           reduce using rule 17 (statement -> for_statement .)
    ID              reduce using rule 17 (statement -> for_statement .)
    WRITELN         reduce using rule 17 (statement -> for_statement .)
    READLN          reduce using rule 17 (statement -> for_statement .)
    FOR             reduce using rule 17 (statement -> for_statement .)
    ELSE            reduce using rule 17 (statement -> for_statement .)


state 22

    (41) statement -> IF . expression THEN statement
    (42) statement -> IF . expression THEN statement ELSE statement
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 34

state 23

    (43) statement -> WHILE . expression DO statement
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 40

state 24

    (20) writeln_statement -> WRITELN . LPAREN writelist RPAREN SEMI

    LPAREN          shift and go to state 41


state 25

    (25) readln_statement -> READLN . LPAREN ID RPAREN SEMI

    LPAREN          shift and go to state 42


state 26

    (26) for_statement -> FOR . ID ASSIGN expression TO expression DO statement

    ID              shift and go to state 43


state 27

    (4) var_declaration_list -> var_declaration_list var_declaration .

    ID              reduce using rule 4 (var_declaration_list -> var_declaration_list var_declaration .)
    BEGIN           reduce using rule 4 (var_declaration_list -> var_declaration_list var_declaration .)


state 28

    (6) var_declaration -> id_list COLON . type SEMI
    (9) type -> . INTEGER
    (10) type -> . BOOLEAN
    (11) type -> . STRING

    INTEGER         shift and go to state 45
    BOOLEAN         shift and go to state 46
    STRING          shift and go to state 47

    type                           shift and go to state 44

state 29

    (8) id_list -> ID COMMA . id_list
    (7) id_list -> . ID
    (8) id_list -> . ID COMMA id_list

    ID              shift and go to state 12

    id_list                        shift and go to state 48

state 30

    (19) assignment_statement -> ID ASSIGN . expression SEMI
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 49

state 31

    (40) statement -> BEGIN statements . END
    (12) statements -> statements . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    END             shift and go to state 50
    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statement                      shift and go to state 33
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 32

    (1) program -> PROGRAM ID SEMI declarations BEGIN statements END . DOT

    DOT             shift and go to state 51


state 33

    (12) statements -> statements statement .

    END             reduce using rule 12 (statements -> statements statement .)
    SEMI            reduce using rule 12 (statements -> statements statement .)
    BEGIN           reduce using rule 12 (statements -> statements statement .)
    IF              reduce using rule 12 (statements -> statements statement .)
    WHILE           reduce using rule 12 (statements -> statements statement .)
    ID              reduce using rule 12 (statements -> statements statement .)
    WRITELN         reduce using rule 12 (statements -> statements statement .)
    READLN          reduce using rule 12 (statements -> statements statement .)
    FOR             reduce using rule 12 (statements -> statements statement .)


state 34

    (41) statement -> IF expression . THEN statement
    (42) statement -> IF expression . THEN statement ELSE statement
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    THEN            shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 35

    (27) expression -> TRUE .

    THEN            reduce using rule 27 (expression -> TRUE .)
    AND             reduce using rule 27 (expression -> TRUE .)
    OR              reduce using rule 27 (expression -> TRUE .)
    LT              reduce using rule 27 (expression -> TRUE .)
    LE              reduce using rule 27 (expression -> TRUE .)
    GT              reduce using rule 27 (expression -> TRUE .)
    GE              reduce using rule 27 (expression -> TRUE .)
    EQ              reduce using rule 27 (expression -> TRUE .)
    NEQ             reduce using rule 27 (expression -> TRUE .)
    DIV             reduce using rule 27 (expression -> TRUE .)
    MOD             reduce using rule 27 (expression -> TRUE .)
    PLUS            reduce using rule 27 (expression -> TRUE .)
    MINUS           reduce using rule 27 (expression -> TRUE .)
    TIMES           reduce using rule 27 (expression -> TRUE .)
    DIVIDE          reduce using rule 27 (expression -> TRUE .)
    DO              reduce using rule 27 (expression -> TRUE .)
    SEMI            reduce using rule 27 (expression -> TRUE .)
    RPAREN          reduce using rule 27 (expression -> TRUE .)
    COMMA           reduce using rule 27 (expression -> TRUE .)
    TO              reduce using rule 27 (expression -> TRUE .)


state 36

    (28) expression -> FALSE .

    THEN            reduce using rule 28 (expression -> FALSE .)
    AND             reduce using rule 28 (expression -> FALSE .)
    OR              reduce using rule 28 (expression -> FALSE .)
    LT              reduce using rule 28 (expression -> FALSE .)
    LE              reduce using rule 28 (expression -> FALSE .)
    GT              reduce using rule 28 (expression -> FALSE .)
    GE              reduce using rule 28 (expression -> FALSE .)
    EQ              reduce using rule 28 (expression -> FALSE .)
    NEQ             reduce using rule 28 (expression -> FALSE .)
    DIV             reduce using rule 28 (expression -> FALSE .)
    MOD             reduce using rule 28 (expression -> FALSE .)
    PLUS            reduce using rule 28 (expression -> FALSE .)
    MINUS           reduce using rule 28 (expression -> FALSE .)
    TIMES           reduce using rule 28 (expression -> FALSE .)
    DIVIDE          reduce using rule 28 (expression -> FALSE .)
    DO              reduce using rule 28 (expression -> FALSE .)
    SEMI            reduce using rule 28 (expression -> FALSE .)
    RPAREN          reduce using rule 28 (expression -> FALSE .)
    COMMA           reduce using rule 28 (expression -> FALSE .)
    TO              reduce using rule 28 (expression -> FALSE .)


state 37

    (37) expression -> LPAREN . expression RPAREN
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 67

state 38

    (48) expression -> NUMBER .

    THEN            reduce using rule 48 (expression -> NUMBER .)
    AND             reduce using rule 48 (expression -> NUMBER .)
    OR              reduce using rule 48 (expression -> NUMBER .)
    LT              reduce using rule 48 (expression -> NUMBER .)
    LE              reduce using rule 48 (expression -> NUMBER .)
    GT              reduce using rule 48 (expression -> NUMBER .)
    GE              reduce using rule 48 (expression -> NUMBER .)
    EQ              reduce using rule 48 (expression -> NUMBER .)
    NEQ             reduce using rule 48 (expression -> NUMBER .)
    DIV             reduce using rule 48 (expression -> NUMBER .)
    MOD             reduce using rule 48 (expression -> NUMBER .)
    PLUS            reduce using rule 48 (expression -> NUMBER .)
    MINUS           reduce using rule 48 (expression -> NUMBER .)
    TIMES           reduce using rule 48 (expression -> NUMBER .)
    DIVIDE          reduce using rule 48 (expression -> NUMBER .)
    DO              reduce using rule 48 (expression -> NUMBER .)
    SEMI            reduce using rule 48 (expression -> NUMBER .)
    RPAREN          reduce using rule 48 (expression -> NUMBER .)
    COMMA           reduce using rule 48 (expression -> NUMBER .)
    TO              reduce using rule 48 (expression -> NUMBER .)


state 39

    (49) expression -> ID .

    THEN            reduce using rule 49 (expression -> ID .)
    AND             reduce using rule 49 (expression -> ID .)
    OR              reduce using rule 49 (expression -> ID .)
    LT              reduce using rule 49 (expression -> ID .)
    LE              reduce using rule 49 (expression -> ID .)
    GT              reduce using rule 49 (expression -> ID .)
    GE              reduce using rule 49 (expression -> ID .)
    EQ              reduce using rule 49 (expression -> ID .)
    NEQ             reduce using rule 49 (expression -> ID .)
    DIV             reduce using rule 49 (expression -> ID .)
    MOD             reduce using rule 49 (expression -> ID .)
    PLUS            reduce using rule 49 (expression -> ID .)
    MINUS           reduce using rule 49 (expression -> ID .)
    TIMES           reduce using rule 49 (expression -> ID .)
    DIVIDE          reduce using rule 49 (expression -> ID .)
    DO              reduce using rule 49 (expression -> ID .)
    SEMI            reduce using rule 49 (expression -> ID .)
    RPAREN          reduce using rule 49 (expression -> ID .)
    COMMA           reduce using rule 49 (expression -> ID .)
    TO              reduce using rule 49 (expression -> ID .)


state 40

    (43) statement -> WHILE expression . DO statement
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    DO              shift and go to state 68
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 41

    (20) writeln_statement -> WRITELN LPAREN . writelist RPAREN SEMI
    (21) writelist -> . writelist COMMA writeitem
    (22) writelist -> . writeitem
    (23) writeitem -> . STRING_LITERAL
    (24) writeitem -> . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    STRING_LITERAL  shift and go to state 71
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    writelist                      shift and go to state 69
    writeitem                      shift and go to state 70
    expression                     shift and go to state 72

state 42

    (25) readln_statement -> READLN LPAREN . ID RPAREN SEMI

    ID              shift and go to state 73


state 43

    (26) for_statement -> FOR ID . ASSIGN expression TO expression DO statement

    ASSIGN          shift and go to state 74


state 44

    (6) var_declaration -> id_list COLON type . SEMI

    SEMI            shift and go to state 75


state 45

    (9) type -> INTEGER .

    SEMI            reduce using rule 9 (type -> INTEGER .)


state 46

    (10) type -> BOOLEAN .

    SEMI            reduce using rule 10 (type -> BOOLEAN .)


state 47

    (11) type -> STRING .

    SEMI            reduce using rule 11 (type -> STRING .)


state 48

    (8) id_list -> ID COMMA id_list .

    COLON           reduce using rule 8 (id_list -> ID COMMA id_list .)


state 49

    (19) assignment_statement -> ID ASSIGN expression . SEMI
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    SEMI            shift and go to state 76
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 50

    (40) statement -> BEGIN statements END .

    END             reduce using rule 40 (statement -> BEGIN statements END .)
    SEMI            reduce using rule 40 (statement -> BEGIN statements END .)
    BEGIN           reduce using rule 40 (statement -> BEGIN statements END .)
    IF              reduce using rule 40 (statement -> BEGIN statements END .)
    WHILE           reduce using rule 40 (statement -> BEGIN statements END .)
    ID              reduce using rule 40 (statement -> BEGIN statements END .)
    WRITELN         reduce using rule 40 (statement -> BEGIN statements END .)
    READLN          reduce using rule 40 (statement -> BEGIN statements END .)
    FOR             reduce using rule 40 (statement -> BEGIN statements END .)
    ELSE            reduce using rule 40 (statement -> BEGIN statements END .)


state 51

    (1) program -> PROGRAM ID SEMI declarations BEGIN statements END DOT .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMI declarations BEGIN statements END DOT .)


state 52

    (41) statement -> IF expression THEN . statement
    (42) statement -> IF expression THEN . statement ELSE statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statement                      shift and go to state 77
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 53

    (29) expression -> expression AND . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 78

state 54

    (30) expression -> expression OR . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 79

state 55

    (31) expression -> expression LT . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 80

state 56

    (32) expression -> expression LE . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 81

state 57

    (33) expression -> expression GT . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 82

state 58

    (34) expression -> expression GE . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 83

state 59

    (35) expression -> expression EQ . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 84

state 60

    (36) expression -> expression NEQ . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 85

state 61

    (38) expression -> expression DIV . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 86

state 62

    (39) expression -> expression MOD . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 87

state 63

    (44) expression -> expression PLUS . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 88

state 64

    (45) expression -> expression MINUS . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 89

state 65

    (46) expression -> expression TIMES . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 90

state 66

    (47) expression -> expression DIVIDE . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 91

state 67

    (37) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 92
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 68

    (43) statement -> WHILE expression DO . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statement                      shift and go to state 93
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 69

    (20) writeln_statement -> WRITELN LPAREN writelist . RPAREN SEMI
    (21) writelist -> writelist . COMMA writeitem

    RPAREN          shift and go to state 94
    COMMA           shift and go to state 95


state 70

    (22) writelist -> writeitem .

    RPAREN          reduce using rule 22 (writelist -> writeitem .)
    COMMA           reduce using rule 22 (writelist -> writeitem .)


state 71

    (23) writeitem -> STRING_LITERAL .

    RPAREN          reduce using rule 23 (writeitem -> STRING_LITERAL .)
    COMMA           reduce using rule 23 (writeitem -> STRING_LITERAL .)


state 72

    (24) writeitem -> expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 24 (writeitem -> expression .)
    COMMA           reduce using rule 24 (writeitem -> expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 73

    (25) readln_statement -> READLN LPAREN ID . RPAREN SEMI

    RPAREN          shift and go to state 96


state 74

    (26) for_statement -> FOR ID ASSIGN . expression TO expression DO statement
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 97

state 75

    (6) var_declaration -> id_list COLON type SEMI .

    ID              reduce using rule 6 (var_declaration -> id_list COLON type SEMI .)
    BEGIN           reduce using rule 6 (var_declaration -> id_list COLON type SEMI .)


state 76

    (19) assignment_statement -> ID ASSIGN expression SEMI .

    END             reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    SEMI            reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    BEGIN           reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    IF              reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    WHILE           reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    ID              reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    WRITELN         reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    READLN          reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    FOR             reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)
    ELSE            reduce using rule 19 (assignment_statement -> ID ASSIGN expression SEMI .)


state 77

    (41) statement -> IF expression THEN statement .
    (42) statement -> IF expression THEN statement . ELSE statement

    END             reduce using rule 41 (statement -> IF expression THEN statement .)
    SEMI            reduce using rule 41 (statement -> IF expression THEN statement .)
    BEGIN           reduce using rule 41 (statement -> IF expression THEN statement .)
    IF              reduce using rule 41 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 41 (statement -> IF expression THEN statement .)
    ID              reduce using rule 41 (statement -> IF expression THEN statement .)
    WRITELN         reduce using rule 41 (statement -> IF expression THEN statement .)
    READLN          reduce using rule 41 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 41 (statement -> IF expression THEN statement .)
    ELSE            shift and go to state 98

  ! ELSE            [ reduce using rule 41 (statement -> IF expression THEN statement .) ]


state 78

    (29) expression -> expression AND expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 29 (expression -> expression AND expression .)
    DO              reduce using rule 29 (expression -> expression AND expression .)
    SEMI            reduce using rule 29 (expression -> expression AND expression .)
    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    TO              reduce using rule 29 (expression -> expression AND expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression AND expression .) ]


state 79

    (30) expression -> expression OR expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 30 (expression -> expression OR expression .)
    DO              reduce using rule 30 (expression -> expression OR expression .)
    SEMI            reduce using rule 30 (expression -> expression OR expression .)
    RPAREN          reduce using rule 30 (expression -> expression OR expression .)
    COMMA           reduce using rule 30 (expression -> expression OR expression .)
    TO              reduce using rule 30 (expression -> expression OR expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression OR expression .) ]


state 80

    (31) expression -> expression LT expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 31 (expression -> expression LT expression .)
    DO              reduce using rule 31 (expression -> expression LT expression .)
    SEMI            reduce using rule 31 (expression -> expression LT expression .)
    RPAREN          reduce using rule 31 (expression -> expression LT expression .)
    COMMA           reduce using rule 31 (expression -> expression LT expression .)
    TO              reduce using rule 31 (expression -> expression LT expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LT expression .) ]


state 81

    (32) expression -> expression LE expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 32 (expression -> expression LE expression .)
    DO              reduce using rule 32 (expression -> expression LE expression .)
    SEMI            reduce using rule 32 (expression -> expression LE expression .)
    RPAREN          reduce using rule 32 (expression -> expression LE expression .)
    COMMA           reduce using rule 32 (expression -> expression LE expression .)
    TO              reduce using rule 32 (expression -> expression LE expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LE expression .) ]


state 82

    (33) expression -> expression GT expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 33 (expression -> expression GT expression .)
    DO              reduce using rule 33 (expression -> expression GT expression .)
    SEMI            reduce using rule 33 (expression -> expression GT expression .)
    RPAREN          reduce using rule 33 (expression -> expression GT expression .)
    COMMA           reduce using rule 33 (expression -> expression GT expression .)
    TO              reduce using rule 33 (expression -> expression GT expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression GT expression .) ]


state 83

    (34) expression -> expression GE expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 34 (expression -> expression GE expression .)
    DO              reduce using rule 34 (expression -> expression GE expression .)
    SEMI            reduce using rule 34 (expression -> expression GE expression .)
    RPAREN          reduce using rule 34 (expression -> expression GE expression .)
    COMMA           reduce using rule 34 (expression -> expression GE expression .)
    TO              reduce using rule 34 (expression -> expression GE expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GE expression .) ]


state 84

    (35) expression -> expression EQ expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 35 (expression -> expression EQ expression .)
    DO              reduce using rule 35 (expression -> expression EQ expression .)
    SEMI            reduce using rule 35 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression EQ expression .)
    COMMA           reduce using rule 35 (expression -> expression EQ expression .)
    TO              reduce using rule 35 (expression -> expression EQ expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression EQ expression .) ]


state 85

    (36) expression -> expression NEQ expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 36 (expression -> expression NEQ expression .)
    DO              reduce using rule 36 (expression -> expression NEQ expression .)
    SEMI            reduce using rule 36 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 36 (expression -> expression NEQ expression .)
    TO              reduce using rule 36 (expression -> expression NEQ expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression NEQ expression .) ]


state 86

    (38) expression -> expression DIV expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 38 (expression -> expression DIV expression .)
    DO              reduce using rule 38 (expression -> expression DIV expression .)
    SEMI            reduce using rule 38 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 38 (expression -> expression DIV expression .)
    COMMA           reduce using rule 38 (expression -> expression DIV expression .)
    TO              reduce using rule 38 (expression -> expression DIV expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! LT              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! LE              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! GT              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! GE              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! NEQ             [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression DIV expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression DIV expression .) ]


state 87

    (39) expression -> expression MOD expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 39 (expression -> expression MOD expression .)
    DO              reduce using rule 39 (expression -> expression MOD expression .)
    SEMI            reduce using rule 39 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 39 (expression -> expression MOD expression .)
    COMMA           reduce using rule 39 (expression -> expression MOD expression .)
    TO              reduce using rule 39 (expression -> expression MOD expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression MOD expression .) ]


state 88

    (44) expression -> expression PLUS expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 44 (expression -> expression PLUS expression .)
    DO              reduce using rule 44 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 44 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 44 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 44 (expression -> expression PLUS expression .)
    TO              reduce using rule 44 (expression -> expression PLUS expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression PLUS expression .) ]


state 89

    (45) expression -> expression MINUS expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 45 (expression -> expression MINUS expression .)
    DO              reduce using rule 45 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 45 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 45 (expression -> expression MINUS expression .)
    TO              reduce using rule 45 (expression -> expression MINUS expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression MINUS expression .) ]


state 90

    (46) expression -> expression TIMES expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 46 (expression -> expression TIMES expression .)
    DO              reduce using rule 46 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 46 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 46 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 46 (expression -> expression TIMES expression .)
    TO              reduce using rule 46 (expression -> expression TIMES expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression TIMES expression .) ]


state 91

    (47) expression -> expression DIVIDE expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    THEN            reduce using rule 47 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 47 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 47 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 47 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 47 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 47 (expression -> expression DIVIDE expression .)
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66

  ! AND             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]


state 92

    (37) expression -> LPAREN expression RPAREN .

    THEN            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 37 (expression -> LPAREN expression RPAREN .)


state 93

    (43) statement -> WHILE expression DO statement .

    END             reduce using rule 43 (statement -> WHILE expression DO statement .)
    SEMI            reduce using rule 43 (statement -> WHILE expression DO statement .)
    BEGIN           reduce using rule 43 (statement -> WHILE expression DO statement .)
    IF              reduce using rule 43 (statement -> WHILE expression DO statement .)
    WHILE           reduce using rule 43 (statement -> WHILE expression DO statement .)
    ID              reduce using rule 43 (statement -> WHILE expression DO statement .)
    WRITELN         reduce using rule 43 (statement -> WHILE expression DO statement .)
    READLN          reduce using rule 43 (statement -> WHILE expression DO statement .)
    FOR             reduce using rule 43 (statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 43 (statement -> WHILE expression DO statement .)


state 94

    (20) writeln_statement -> WRITELN LPAREN writelist RPAREN . SEMI

    SEMI            shift and go to state 99


state 95

    (21) writelist -> writelist COMMA . writeitem
    (23) writeitem -> . STRING_LITERAL
    (24) writeitem -> . expression
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    STRING_LITERAL  shift and go to state 71
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    writeitem                      shift and go to state 100
    expression                     shift and go to state 72

state 96

    (25) readln_statement -> READLN LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 101


state 97

    (26) for_statement -> FOR ID ASSIGN expression . TO expression DO statement
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    TO              shift and go to state 102
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 98

    (42) statement -> IF expression THEN statement ELSE . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statement                      shift and go to state 103
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 99

    (20) writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .

    END             reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    SEMI            reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    BEGIN           reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    IF              reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    WHILE           reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    ID              reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    WRITELN         reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    READLN          reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    FOR             reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)
    ELSE            reduce using rule 20 (writeln_statement -> WRITELN LPAREN writelist RPAREN SEMI .)


state 100

    (21) writelist -> writelist COMMA writeitem .

    RPAREN          reduce using rule 21 (writelist -> writelist COMMA writeitem .)
    COMMA           reduce using rule 21 (writelist -> writelist COMMA writeitem .)


state 101

    (25) readln_statement -> READLN LPAREN ID RPAREN SEMI .

    END             reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    SEMI            reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    BEGIN           reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    IF              reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    WHILE           reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    WRITELN         reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    READLN          reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    FOR             reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)
    ELSE            reduce using rule 25 (readln_statement -> READLN LPAREN ID RPAREN SEMI .)


state 102

    (26) for_statement -> FOR ID ASSIGN expression TO . expression DO statement
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression GE expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . expression DIV expression
    (39) expression -> . expression MOD expression
    (44) expression -> . expression PLUS expression
    (45) expression -> . expression MINUS expression
    (46) expression -> . expression TIMES expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . NUMBER
    (49) expression -> . ID

    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    ID              shift and go to state 39

    expression                     shift and go to state 104

state 103

    (42) statement -> IF expression THEN statement ELSE statement .

    END             reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    SEMI            reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    BEGIN           reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    IF              reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    WHILE           reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    ID              reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    WRITELN         reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    READLN          reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    FOR             reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)
    ELSE            reduce using rule 42 (statement -> IF expression THEN statement ELSE statement .)


state 104

    (26) for_statement -> FOR ID ASSIGN expression TO expression . DO statement
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . GE expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (38) expression -> expression . DIV expression
    (39) expression -> expression . MOD expression
    (44) expression -> expression . PLUS expression
    (45) expression -> expression . MINUS expression
    (46) expression -> expression . TIMES expression
    (47) expression -> expression . DIVIDE expression

    DO              shift and go to state 105
    AND             shift and go to state 53
    OR              shift and go to state 54
    LT              shift and go to state 55
    LE              shift and go to state 56
    GT              shift and go to state 57
    GE              shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    DIV             shift and go to state 61
    MOD             shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 105

    (26) for_statement -> FOR ID ASSIGN expression TO expression DO . statement
    (14) statement -> . assignment_statement
    (15) statement -> . writeln_statement
    (16) statement -> . readln_statement
    (17) statement -> . for_statement
    (18) statement -> . SEMI
    (40) statement -> . BEGIN statements END
    (41) statement -> . IF expression THEN statement
    (42) statement -> . IF expression THEN statement ELSE statement
    (43) statement -> . WHILE expression DO statement
    (19) assignment_statement -> . ID ASSIGN expression SEMI
    (20) writeln_statement -> . WRITELN LPAREN writelist RPAREN SEMI
    (25) readln_statement -> . READLN LPAREN ID RPAREN SEMI
    (26) for_statement -> . FOR ID ASSIGN expression TO expression DO statement

    SEMI            shift and go to state 14
    BEGIN           shift and go to state 15
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    ID              shift and go to state 13
    WRITELN         shift and go to state 24
    READLN          shift and go to state 25
    FOR             shift and go to state 26

    statement                      shift and go to state 106
    assignment_statement           shift and go to state 18
    writeln_statement              shift and go to state 19
    readln_statement               shift and go to state 20
    for_statement                  shift and go to state 21

state 106

    (26) for_statement -> FOR ID ASSIGN expression TO expression DO statement .

    END             reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    SEMI            reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    BEGIN           reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    IF              reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WHILE           reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    ID              reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WRITELN         reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    READLN          reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    FOR             reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    ELSE            reduce using rule 26 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for LT in state 78 resolved as shift
WARNING: shift/reduce conflict for LE in state 78 resolved as shift
WARNING: shift/reduce conflict for GT in state 78 resolved as shift
WARNING: shift/reduce conflict for GE in state 78 resolved as shift
WARNING: shift/reduce conflict for EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV in state 78 resolved as shift
WARNING: shift/reduce conflict for MOD in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for LT in state 79 resolved as shift
WARNING: shift/reduce conflict for LE in state 79 resolved as shift
WARNING: shift/reduce conflict for GT in state 79 resolved as shift
WARNING: shift/reduce conflict for GE in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for MOD in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for LT in state 80 resolved as shift
WARNING: shift/reduce conflict for LE in state 80 resolved as shift
WARNING: shift/reduce conflict for GT in state 80 resolved as shift
WARNING: shift/reduce conflict for GE in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV in state 80 resolved as shift
WARNING: shift/reduce conflict for MOD in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for LT in state 81 resolved as shift
WARNING: shift/reduce conflict for LE in state 81 resolved as shift
WARNING: shift/reduce conflict for GT in state 81 resolved as shift
WARNING: shift/reduce conflict for GE in state 81 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV in state 81 resolved as shift
WARNING: shift/reduce conflict for MOD in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for LT in state 82 resolved as shift
WARNING: shift/reduce conflict for LE in state 82 resolved as shift
WARNING: shift/reduce conflict for GT in state 82 resolved as shift
WARNING: shift/reduce conflict for GE in state 82 resolved as shift
WARNING: shift/reduce conflict for EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for LE in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for GE in state 83 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for MOD in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for LT in state 84 resolved as shift
WARNING: shift/reduce conflict for LE in state 84 resolved as shift
WARNING: shift/reduce conflict for GT in state 84 resolved as shift
WARNING: shift/reduce conflict for GE in state 84 resolved as shift
WARNING: shift/reduce conflict for EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for MOD in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for LT in state 85 resolved as shift
WARNING: shift/reduce conflict for LE in state 85 resolved as shift
WARNING: shift/reduce conflict for GT in state 85 resolved as shift
WARNING: shift/reduce conflict for GE in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV in state 85 resolved as shift
WARNING: shift/reduce conflict for MOD in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for LT in state 86 resolved as shift
WARNING: shift/reduce conflict for LE in state 86 resolved as shift
WARNING: shift/reduce conflict for GT in state 86 resolved as shift
WARNING: shift/reduce conflict for GE in state 86 resolved as shift
WARNING: shift/reduce conflict for EQ in state 86 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV in state 86 resolved as shift
WARNING: shift/reduce conflict for MOD in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for LT in state 87 resolved as shift
WARNING: shift/reduce conflict for LE in state 87 resolved as shift
WARNING: shift/reduce conflict for GT in state 87 resolved as shift
WARNING: shift/reduce conflict for GE in state 87 resolved as shift
WARNING: shift/reduce conflict for EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV in state 87 resolved as shift
WARNING: shift/reduce conflict for MOD in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for DIV in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for LE in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for GE in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 89 resolved as shift
WARNING: shift/reduce conflict for DIV in state 89 resolved as shift
WARNING: shift/reduce conflict for MOD in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for LT in state 90 resolved as shift
WARNING: shift/reduce conflict for LE in state 90 resolved as shift
WARNING: shift/reduce conflict for GT in state 90 resolved as shift
WARNING: shift/reduce conflict for GE in state 90 resolved as shift
WARNING: shift/reduce conflict for EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for LE in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for GE in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 91 resolved as shift
WARNING: shift/reduce conflict for DIV in state 91 resolved as shift
WARNING: shift/reduce conflict for MOD in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
